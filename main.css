/******************************************\
                $Imported Fonts
\******************************************/

@import url(https://fonts.googleapis.com/css?family=Droid+Sans:400,700);    /* Fonts used for web page differ from actual fonts in PSD since they aren't available in Google fonts and I want the majority of people to be able to see the fonts I use. */

/******************************************\
                $CSS Reset
\******************************************/

/* basic elements */
body, html, div, blockquote, img, label, p, h1, h2, h3, h4, h5, h6, pre, ul, ol,
li, dl, dt, dd, form, a, fieldset, th, td
{
margin: 0; padding: 0; border: 0; outline: none;
}

body
{
line-height: 1;
}

h1, h2, h3, h4, h5, h6
{
padding: .6em 0;
margin: 0 0;
}

ul, ol
{
list-style: none;
}

a
{
color: green;
text-decoration: none;
}

a:hover
{
text-decoration: none;
color: #EBB000;
}

/******************************************\
                $Main
\******************************************/

html {
    width: 100%;
    height: 100%;
}

body {
    width: 100%;
    height: 100%;
}

/*   Pixel measurments are for mobile unless stated otherwise in an associated comment.   */

/***Welcome section***/

.welcome {
    background-image: url(images/Untitled-billybonds.jpg);       /*When saving an image from Photoshop, whatever part of the background (even if it's transparent) the actual img doesn't cover gets added as whitespace around it. So, when you add the img in CSS and try to make it "cover" the full screen in the browser window it has some whitespace around it where it  didn't cover the background pixels of the Photoshop document it was in.    My solution: Find out the dimensions of the actual img and make the Photoshop document the same size or slightly smaller. Result: When you save the img (jpeg, png, etc.) and use it on your webpage, there won't be any whitespace around it acting as a buffer between the actual img and the edges of the div, element, window, etc. */
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
}

/***Company Logo***/

.companyLogo-container {
    display: flex;
    justify-content: center;
}

.companyLogo {
    margin-top: 20px;
}

/***Intro headings***/

.welcome-text {
    width: 100%;
    height: 100%;
    position: absolute;
    text-align: center;
    top: 39%;
    color: white;
}

#intro {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    line-height: 1.2;
    padding: 0;
    margin-bottom: 10px;
}

#intro-end-sentence {
    font-style: italic;
    font-size: x-large;
    text-align: center;
    padding: 0;
}

/***About section***/

.about {
    margin-bottom: 30px;
}

/***About headings***/

#about-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    color: #534742;
    text-align: center;
    padding: 0;
    margin-top: 70px;                    /* Actual PSD measurement is approx. 70px */
    margin-bottom: 50px;              /* Actual PSD measurement is approx. 70px */
}

.about-first-paragraph {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    line-height: 1.5;
    padding: 0 5%;     /* gives text equal space on left & right, and thus keeps it centered in window, while text being left-aligned */
    margin-bottom: 30px;
}

#meet-team-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    margin-bottom: 30px;
    color: #87765d;
}

.about-final-paragraph {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    line-height: 1.5;
    padding: 0 5%;       /* gives text equal space on left & right, and thus keeps it centered in window, while text being left-aligned */
}

/***Team Slider CSS***/

.team-carousel-outmost-container {
    display: flex;
    justify-content: center;
}

.carousel-outer-container {
    width: 200px;
    height: 200px;
    border: 3px #534742 solid;
    overflow: hidden;
}

.carousel-inner {
    width: 1200px;
    height: 200px;
    margin: 0;
    font-size: 0;           /*Gets rid of the space between the img elements, because a space with a size 0 font means:                                                 no space. Why the space? Img elements have a default CSS style of "display: inline-block", which puts spaces b/w the elements set on that LINE (like a sentence). */
    transform: translate3d(0, 0, 0);
    transition: transform .5s ease-in-out;
}

.sliding-image {
    width: 200px;
    height: 200px;
}

.navLinks {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
}

.navLinks ul {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin-top: 6px;
    font-size: small;
}

.itemLinks {
    float: left;
    text-align: center;
    margin: 8.5px;
    list-style: none;
    cursor: pointer;
    background-color: #CCCCCC;
    padding: 5px;         /*   There is nothing b/w the opening and closing li tags, so the "background-color" property won't show up since there's nothing to show up behind....adding "padding" to this element adds some size to it (previously MIA) and thus the background color shows up and it's not just a black circle (a result of the "border" property).   */
    border-radius: 50%;
    border: #534742 3px solid;
}

.itemLinks:hover {
    background-color: #87765d;
}

.itemLinks.active {
    background-color: #534742;
    color: #534742;
    outline-width: 7px;  /* not sure what this does...or if this will be a functional size*/
}

.itemLinks.active:hover {
    background-color: #4848484;           /*Is this property necessary?*/
    color: #FFFFFF;
}

/***Portfolio section***/

.Portfolio {
    padding-top: 40px;
    background: #5c856c;
}

#portfolio-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    color: white;
    margin-bottom: 50px;
}


/***Portfolio Slider CSS***/

.portfolio-carousel-outmost-container {
    display: flex;
    justify-content: center;
}

.portfolio-carousel-outer-container {
    width: 235px;     /* Not all may be 235px wide */
    height: 135px;
    border: 3px #534742 solid;
    overflow: hidden;
}

.portfolio-carousel-inner {
    width: 1880px;
    height: 135px;
    margin: 0;
    font-size: 0;     /*Gets rid of the space between the img elements, because a space with a size 0 font means:                                                 no space. Why the space? Img elements have a default CSS style of "display: inline-block", which puts spaces b/w the elements set on that LINE (like a sentence). */
    transform: translate3d(0, 0, 0);
    transition: transform .5s ease-in-out;
}

.portfolio-sliding-image {
    width: 235px;
    height: 135px;
}

.portfolio-navLinks {
    width: 100%;
    display: flex;
    justify-content: center;
    padding-bottom: 30px;
}

.portfolio-navLinks ul {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin-top: 6px;
    font-size: small;
}

.portfolio-itemLinks {
    float: left;
    text-align: center;
    margin: 6.5px;
    list-style: none;
    cursor: pointer;
    background-color: #CCCCCC;
    padding: 5px;         /*   There is nothing b/w the opening and closing li tags, so the "background-color" property won't show up since there's nothing to show up behind....adding "padding" to this element adds some size to it (previously MIA) and thus the background color shows up and it's not just a black circle (a result of the "border" property).   */
    border-radius: 50%;
    border: #534742 3px solid;  /*not sure if this will be a functional size*/
}

.portfolio-itemLinks:hover {
    background-color: #87765d;
}

.portfolio-itemLinks.active {
    background-color: #534742;
    color: #FFFFFF;
    outline-width: 7px;  /* not sure what this does...or if this will be a functional size*/
}

.portfolio-itemLinks.active:hover {
    background-color: #4848484;           /*Is this property necessary?*/
    color: #FFFFFF;
}

/***Contact section***/

.contactUs {
    margin-top: 40px;
}

#contactUs-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    margin-bottom: 30px;
    color: #534742;
}

/***Form CSS***/

.contact-form-section {
    text-align: center;
}

.emailBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 25px;   /*Mobile height, actual PSD height is approx. 75px*/
    border: none;
    background: #ebebeb;
    padding-left: 5px;         /* This adds space between the text and left side of input element */
    margin-bottom: 5px;
}

 /* The declarations below change the color of placeholder text of input elements */

::-webkit-input-placeholder {
   color: black;
}

::-moz-placeholder {         /* Firefox 19+ */
  color: black;
}


:-ms-input-placeholder {          /* IE 10+ */
  color: black;
}


:-moz-placeholder {          /* Firefox 18- */
  color: black;
}

.nameBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 25px;    /*Mobile height, actual PSD height is approx. 75px*/
    border: none;
    background: #ebebeb;
    padding-left: 5px;
    margin-bottom:10px;
}

.messageBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 80px;
    border: none;
    background: #ebebeb;
    padding-left: 5px;
}

.sendButton {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    padding:  10px 20px;      /* Adjusting this adjusts the size the button */
    margin-top: 10px;
    margin-bottom: 70px;
    color: white;
    background: #5c856c;
    border: none;
}


/***Back to Top Button***/

.top-button {
    display: flex;
    justify-content: center;
}

.backToTopButton {
    color: white;
    padding: 20px;
    background-color: #ba8c48;
}

.backToTopButton:hover {
    color: white;
}

/***social media icons***/      /* courtesy of Font Awesome */

.socialMediaIcons {
    display: flex;
    justify-content: center;
    margin-top: 60px;
}

.socialMediaIcons a:hover {
    color: #534742;
}

.twitterIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.facebookIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.googleplusIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.dribbbleIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.pinterestIcon {
    color: #b7b7b7;
}

/*** Menu ***/

.full-menu {
    visibility: hidden;
    position: fixed;
    height: 100%;
    width: 100%;
    opacity: 0;
    background-color: white;
    -webkit-transition: all 500ms ease-in-out;
    transition: all 500ms ease-in-out;
}

.full-menu--open {    /* makes ".full-menu" visible since this class and, as a result, this styling have been added to it by the javascript the moment the user clicks the hamburger icon. */
    visibility: visible;
    opacity: 1;
}

.hamburger {
    position: absolute;
    top: 20px;
    right: 5%;
    width: 60px;
    height: 45px;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transition: .5s ease-in-out;
    -moz-transition: .5s ease-in-out;
    -o-transition: .5s ease-in-out;
    transition: .5s ease-in-out;
    cursor: pointer;     /* This cursor into the little hand icon? */
}

.hamburger span {
    display: block;   /* each span line is now on its own line so that they are stacked */
    position: absolute;
    height: 9px;   /* the heigh of each span line */
    width: 100%;   /* makes the lines take up the full widh of their container */
    background: #d3531a;    /* makes the red span lines */
    border-radius: 9px;    /* rounds the edges of span lines */
    opacity: 1;  /* makes sure all span lines are visible */
    left: 0;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate (0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: .25s ease-in-out;
    -moz-transition: .25s ease-in-out;
    -o-trnasition: .25s ease-in-out;
    transition: .25s ease-in-out;
}

.hamburger span:nth-child(1) {   /* first span line */
    top: 0px;
    -webkit-transorm-origin: left center;  /* defines where the view is placed at the x & then Y axis */
    -moz-transform-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger span:nth-child(2) {  /* second span line */
    top: 18px;  /* starts 9px after 1st span line ends */
    -webkit-transform-origin: left center;
    -moz-transorm-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger span:nth-child(3) {  /* third span line */
    top: 36px;   /* starts 9px after 2nd span line ends */
    -webkit-transform-origin: left center;
    -moz-transform-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger.open span:nth-child(1) {  /* rotates 1st span line down (clockwise I believe if that's the standard direction things rotate in with the transform property) */
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg);
    top: -3px;
    left: 8px;
}

.hamburger.open span:nth-child(2) {  /* makes 2nd span line dissapear */
    width: 0%;
    opacity: 0;
}

.hamburger.open span:nth-child(3) {  /* rotates 3rd span line up */
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg);
    top: 39px;
    left: 8px;
}

.hamburger:focus {
    outline: 0;
}

/* menu-position */
 /*.full-menu--middle {
    display: table-cell;
    vertical-align: middle;
}*/
