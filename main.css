/******************************************\
                $Imported Fonts
\******************************************/

@import url(https://fonts.googleapis.com/css?family=Droid+Sans:400,700);    /* Fonts used for web page differ from actual fonts in PSD since they aren't available in Google fonts and I want the majority of people to be able to see the fonts I use. */

/******************************************\
                $CSS Reset
\******************************************/

/* basic elements */
body, html, section, div, blockquote, img, label, p, h1, h2, h3, h4, h5, h6, pre, ul, ol,
li, dl, dt, dd, form, a, fieldset, th, td
{
margin: 0; padding: 0; border: 0; outline: none;
}

body
{
line-height: 1;
}

h1, h2, h3, h4, h5, h6
{
padding: .6em 0;
margin: 0 0;
}

ul, ol
{
list-style: none;
}

a
{
color: green;
text-decoration: none;
}

a:hover
{
text-decoration: none;
color: #EBB000;
}

/******************************************\
                $Main
\******************************************/

html {
    width: 100%;
    height: 100%;
}

body {
    width: 100%;
    height: 100%;
}

/*   Pixel measurments are for mobile unless stated otherwise in an associated comment.   */

/***Welcome section***/

.welcome {
    background-image: url(images/Untitled-billybonds.jpg);       /*When saving an image from Photoshop, whatever part of the background (even if it's transparent) the actual img doesn't cover gets added as whitespace around it. So, when you add the img in CSS and try to make it "cover" the full screen in the browser window it has some whitespace around it where it  didn't cover the background pixels of the Photoshop document it was in.    My solution: Find out the dimensions of the actual img and make the Photoshop document the same size or slightly smaller. Result: When you save the img (jpeg, png, etc.) and use it on your webpage, there won't be any whitespace around it acting as a buffer between the actual img and the edges of the div, element, window, etc. */
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
}

/***Company Logo***/

.companyLogo-container {
    display: flex;
    justify-content: center;
}

.companyLogo {
    margin-top: 20px;
}

/***Intro headings***/

.welcome-text {
    width: 100%;
    height: 100%;
    position: absolute;
    text-align: center;
    top: 39%;
    color: white;
}

#intro {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    line-height: 1.2;
    padding: 0;
    margin-bottom: 10px;
}

#intro-end-sentence {
    font-style: italic;
    font-size: x-large;
    text-align: center;
    padding: 0;
}

/***About section***/

.about {
    margin-bottom: 30px;
}

/***About headings***/

#about-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    color: #534742;
    text-align: center;
    padding: 0;
    margin-top: 70px;                    /* Actual PSD measurement is approx. 70px */
    margin-bottom: 50px;              /* Actual PSD measurement is approx. 70px */
}

.about-first-paragraph {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    line-height: 1.5;
    padding: 0 5%;     /* gives text equal space on left & right, and thus keeps it centered in window, while text being left-aligned */
    margin-bottom: 30px;
}

#meet-team-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    margin-bottom: 30px;    /* PSD measurement */
    color: #87765d;
}

.about-final-paragraph {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    line-height: 1.5;
    padding: 0 5%;       /* gives text equal space on left & right, and thus keeps it centered in window, while text being left-aligned */
}

/***Team Slider CSS***/

.team-carousel-outmost-container {
    display: flex;
    justify-content: center;
}

.carousel-outer-container {
    width: 148px;    /* width of  one img */
    height: 148px;   /* height of one img */
    border: 3px #534742 solid;
    overflow: hidden;
}

.carousel-inner {
    width: 888px;   /* width of all 6 img's */
    height: 148px;     /* height of one img */
    margin: 0;
    font-size: 0;           /*Gets rid of the space between the img elements, because a space with a size 0 font means:                                                 no space. Why the space? Img elements have a default CSS style of "display: inline-block", which puts spaces b/w the elements set on that LINE (like a sentence). */
    transform: translate3d(0, 0, 0);
    transition: transform .5s ease-in-out;
}

.sliding-image {
    width: 148px;
    height: 148px;
}

.navLinks {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
}

.navLinks ul {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin-top: 6px;
    font-size: small;
}

.itemLinks {
    float: left;
    text-align: center;
    margin: 8.5px;
    list-style: none;
    cursor: pointer;
    background-color: #CCCCCC;
    padding: 5px;         /*   There is nothing b/w the opening and closing li tags, so the "background-color" property won't show up since there's nothing to show up behind....adding "padding" to this element adds some size to it (previously MIA) and thus the background color shows up and it's not just a black circle (a result of the "border" property).   */
    border-radius: 50%;
    border: #534742 3px solid;
}

.itemLinks:hover {
    background-color: #87765d;
}

.itemLinks.active {
    background-color: #534742;
    color: #534742;
    outline-width: 7px;  /* not sure what this does...or if this will be a functional size*/
}

.itemLinks.active:hover {
    background-color: #4848484;           /*Is this property necessary?*/
    color: #FFFFFF;
}

/***Portfolio section***/

.Portfolio {
    padding-top: 40px;
    background: #5c856c;
}

#portfolio-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    color: white;
    margin-bottom: 50px;
}


/***Portfolio Slider CSS***/

.portfolio-carousel-outmost-container {
    display: flex;
    justify-content: center;
}

.portfolio-carousel-outer-container {
    width: 235px;     /* Not all may be 235px wide */
    height: 135px;
    border: 3px #534742 solid;
    overflow: hidden;
}

.portfolio-carousel-inner {
    width: 1880px;
    height: 135px;
    margin: 0;
    font-size: 0;     /*Gets rid of the space between the img elements, because a space with a size 0 font means:                                                 no space. Why the space? Img elements have a default CSS style of "display: inline-block", which puts spaces b/w the elements set on that LINE (like a sentence). */
    transform: translate3d(0, 0, 0);
    transition: transform .5s ease-in-out;
}

.portfolio-sliding-image {
    width: 235px;
    height: 135px;
}

.portfolio-navLinks {
    width: 100%;
    display: flex;
    justify-content: center;
    padding-bottom: 30px;
}

.portfolio-navLinks ul {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin-top: 6px;
    font-size: small;
}

.portfolio-itemLinks {
    float: left;
    text-align: center;
    margin: 6.5px;
    list-style: none;
    cursor: pointer;
    background-color: #CCCCCC;
    padding: 5px;         /*   There is nothing b/w the opening and closing li tags, so the "background-color" property won't show up since there's nothing to show up behind....adding "padding" to this element adds some size to it (previously MIA) and thus the background color shows up and it's not just a black circle (a result of the "border" property).   */
    border-radius: 50%;
    border: #534742 3px solid;  /*not sure if this will be a functional size*/
}

.portfolio-itemLinks:hover {
    background-color: #87765d;
}

.portfolio-itemLinks.active {
    background-color: #534742;
    color: #FFFFFF;
    outline-width: 7px;  /* not sure what this does...or if this will be a functional size*/
}

.portfolio-itemLinks.active:hover {
    background-color: #4848484;           /*Is this property necessary?*/
    color: #FFFFFF;
}

.fa-stack {
    display: none;
    visibility: hidden;
}

/***Contact section***/

.contactUs {
    margin-top: 40px;
}

#contactUs-section-heading {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 700;
    text-align: center;
    padding: 0;
    margin-bottom: 30px;
    color: #534742;
}

/***Form CSS***/

.contact-form-section {
    text-align: center;
}

.emailBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 25px;   /*Mobile height, actual PSD height is approx. 75px*/
    border: none;
    background: #ebebeb;
    padding-left: 5px;         /* This adds space between the text and left side of input element */
    margin-bottom: 5px;
}

 /* The declarations below change the color of placeholder text of input elements */

::-webkit-input-placeholder {
   color: black;
}

::-moz-placeholder {         /* Firefox 19+ */
  color: black;
}


:-ms-input-placeholder {          /* IE 10+ */
  color: black;
}


:-moz-placeholder {          /* Firefox 18- */
  color: black;
}

.nameBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 25px;    /*Mobile height, actual PSD height is approx. 75px*/
    border: none;
    background: #ebebeb;
    padding-left: 5px;
    margin-bottom:10px;
}

.messageBox {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    width: 168px;
    height: 80px;
    border: none;
    background: #ebebeb;
    padding-left: 5px;
}

.sendButton {
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    padding:  10px 20px;      /* Adjusting this adjusts the size the button */
    margin-top: 10px;
    margin-bottom: 70px;
    color: white;
    background: #5c856c;
    border: none;
}


/***Back to Top Button***/

.top-button {
    display: flex;
    justify-content: center;
}

.backToTopButton {
    color: white;
    padding: 20px;
    background-color: #ba8c48;
}

.backToTopButton:hover {
    color: white;
}

/***social media icons***/      /* courtesy of Font Awesome */

.socialMediaIcons {
    display: flex;
    justify-content: center;
    margin-top: 60px;
}

.socialMediaIcons a:hover {
    color: #534742;
}

.twitterIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.facebookIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.googleplusIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.dribbbleIcon {
    color: #b7b7b7;
    margin-right: 8px;
}

.pinterestIcon {
    color: #b7b7b7;
}

/*** Menu ***/

.full-menu {
    visibility: hidden;
    position: fixed;
    height: 100%;
    width: 100%;
    opacity: 0;
    background-color: #5c856c;
    -webkit-transition: all 500ms ease-in-out;
    transition: all 500ms ease-in-out;  /* speed of transitions for this element: speed at which this menu gets to an opacity of 1, and turns green. */
    z-index: 2;   /* makes this menu topmost, so that nothing else is visible while it's open */
}

.full-menu--open {    /* makes ".full-menu" visible since this class and, as a result, this styling have been added to it by the javascript the moment the user clicks the hamburger icon. */
    visibility: visible;
    opacity: 1;
}

.full-menu--middle {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.main-nav li {
    margin-bottom: 8%;
}

.main-nav li:nth-child(3) {
    margin-bottom: 0;
}

.main-nav a {
    color: white;
    font-family: 'Droid Sans' , sans-serif;
    font-weight: 400;
    font-size: xx-large;
}

/*** Hamburger menu styles & animation ***/

.hamburger {
    position: absolute;
    top: 20px;
    right: 5%;
    width: 30px;
    height: 25px;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transition: .5s ease-in-out;
    -moz-transition: .5s ease-in-out;
    -o-transition: .5s ease-in-out;
    transition: .5s ease-in-out;
    cursor: pointer;     /* This cursor into the little hand icon? */
    z-index: 2;  /* keeps hamburger "button" after full-screen menu is opened */
}

.hamburger span {
    display: block;   /* each span line is now on its own line so that they are stacked */
    position: absolute;
    height: 5px;   /* the heigh of each span line */
    width: 100%;   /* makes the lines take up the full widh of their container */
    background: white;    /* makes the red span lines */
    border-radius: 9px;    /* rounds the edges of span lines */
    opacity: 1;  /* makes sure all span lines are visible */
    left: 0;
    -webkit-transition: .25s ease-in-out;   /* defines time transition lasts for this element */
    -moz-transition: .25s ease-in-out;
    -o-trnasition: .25s ease-in-out;
    transition: .25s ease-in-out;
}

.hamburger span:nth-child(1) {   /* first span line */
    top: 0px;
    -webkit-transorm-origin: left center;  /* defines where the view is placed at the x & then Y axis */
    -moz-transform-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger span:nth-child(2) {  /* second span line */
    top: 10px;  /* starts 5px after 1st span line ends */
    -webkit-transform-origin: left center;
    -moz-transorm-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger span:nth-child(3) {  /* third span line */
    top: 20px;   /* starts 5px after 2nd span line ends */
    -webkit-transform-origin: left center;
    -moz-transform-origin: left center;
    -o-transform-origin: left center;
    transform-origin: left center;
}

.hamburger.open span:nth-child(1) {
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg);   /* rotates 1st span line down, clockwise */
    top: -1px;    /* moves post-rotated span line along y-axis*/
}

.hamburger.open span:nth-child(2) {  /* makes 2nd span line dissapear */
    width: 0%;
    opacity: 0;
}

.hamburger.open span:nth-child(3) {
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg);   /* rotates 3rd span line up, counter-clockwise */
    top: 20px;
}




/******************************************************************************************************


                                                                                    Media query PSD Styles


******************************************************************************************************/



@media(min-width: 1280px) {

    p {
        color: skyblue;
    }

    /****************
      $Welcome section
    *****************/

    .welcome {  /* PSD measurement taken from: top of logo - bottom end of background image */
        position: relative;
        background-image: none;
        background: beige;
        height: 813px;
        top: 60px;    /* where this section begins in PSD. Placing this section 60px from the top OF its normal placement causally pushes it DOWN 60px, and thus, the section now has a bottom POSITION of - 60px. Why does this matter? : Sections following this section will place themselves beneath it in relation to the ORIGINAL position of the bottom edge of the container/section/div. That means that they will be SEEMINGLY overlapping!!! How do you fix this if you want to change the positioning? : Compensate for the negative bottom positioning of the preceding section/div/container by pushing the following sections down from the "top" by the same amount the first section/div/container was :)  In this case that would mean giving the following sections a position of "realitive" and "top" property value of 60px. */
    }

    /*********
        $menu
     *********/

    .full-menu {    /* I essentially centered the nav with 5 spaces between the anchor text and "|" sign since that's what was done in photoshop for the most part. */
        position: absolute;
        top: 128px;  /* this is 3px less than actual PSD starting point from the top of the ".welcome" container since there is space between the top of this container and the top of the child container in which the characters are actually flush with the top of the container. So, putting this container at the actual 131px would put the nav letters lower than they actually are in the PSD document. */
        background: transparent;  /* gets rid of the green background from the full-screen mobile version, so that rest of page is visible */
        visibility: visible;  /* makes it visible, as opposed to it's non-visible default state in the mobile version */
        opacity: 1;    /* actually makes the menu visible to the naked eye, since its default state is an opacity of 0 for the mobile version */
        height: 50px;
    }

    .main-nav {               /*  The nav is centered but the text isn't fully centered so that the middle of the word "Portfolio is smack dab in the middle of the page. Why: the nav isn't fully centered this way in the PSD either. AND, if I were to fully center it like I just described, each word wouldn't be the exact, same distance from the vertical '|' bars as they are now & as they are in the PSD.  */
        display: flex;
    }

    .main-nav a {
        font-size: large;
        color: #5c856c;
    }

    .unique-hover-color {     /* selector using a span element class that  keeps "|" character green (doesn't turn white like rest of textual characters) when "a" element is hovered over */
        color: #5c856c;
    }

    .local-link-1 span {
        margin-top: 1px;
        margin-left: 18.928px;
        margin-right: 18.928px;    /* After some calculations, each of the 5 spaces between each anchor word and the "|" character came out to be 4.732px. So, I added 4 spaces worth (18.928px) of margin on the left and/or right side (whatever was needed) to re-create the 5 spaces in the PSD. I added 4 spaces worth and not 5 becuse there was 1 space already from using the "|" character. I chose to use this method instead of four "&nbsp;"'s since that seemed "messy". */
        margin-bottom: 3px;
    }

    .local-link-1 span:hover {
        color: white;
        padding-top: 1px;
        padding-left: 8px;     /* this padding is used for a background-color cushion as in the PSD */
        padding-right: 8px;
        padding-bottom: 3px;
        background: #ba8c48;
        margin-left: 10.928px;     /* decreased margin for this hover since padding was added. This keeps the text in it's exact same place as in the default state of this element */
        margin-right: 10.928px;
        margin-top: 0px;
        margin-bottom: 0px;
        border-radius: 8%;
        box-shadow: 1px 2px #e9e8e8;  /* PSD drop-shadow measurements */
    }

    .local-link-2 span {
        margin-top: 1px;    /* placeholder for "padding-top" property in the hover state of this element to prevent visible shifting */
        margin-left: 18.928px;
        margin-right: 18.928px;
        margin-bottom: 3px;     /* placeholder for "padding-bottom" property in the hover state of this element to prevent visible shifting */
    }

    .local-link-2 span:hover {
        color: white;
        padding-top: 1px;
        padding-left: 8px;     /* this padding is used for a background-color cushion as in the PSD */
        padding-right: 8px;
        padding-bottom: 3px;
        background: #ba8c48;
        margin-left: 10.928px;     /* decreased margin for this hover since padding was added. This keeps the text in it's exact same place as in the default state of this element */
        margin-right: 10.928px;
        margin-top: 0px;
        margin-bottom: 0px;
        border-radius: 8%;
        box-shadow: 1px 2px #e9e8e8;
    }

    .local-link-3 span {
        margin-top: 1px;    /* placeholder for "padding-top" property in the hover state of this element to prevent visible shifting */
        margin-left: 18.928px;
        margin-right: 18.928px;
        margin-bottom: 3px;     /* placeholder for "padding-bottom" property in the hover state of this element to prevent visible shifting */
    }

    .local-link-3 span:hover {
        color: white;
        padding-top: 1px;
        padding-left: 8px;     /* this padding is used for a background-color cushion as in the PSD */
        padding-right: 8px;
        padding-bottom: 3px;
        background: #ba8c48;
        margin-left: 10.928px;     /* decreased margin for this hover since padding was added. This keeps the text in it's exact same place as in the default state of this element */
        margin-right: 10.928px;
        margin-top: 0px;
        margin-bottom: 0px;
        border-radius: 8%;
        box-shadow: 1px 2px #e9e8e8;
    }

    .content {
        visibility: hidden;   /* hides the hamburger shape & functionality built for mobile version */
    }

    /****************
        $intro-headings
     ****************/

    .welcome-text { /*PSD measurement taken from: top of background image - bottom of background image */
        position: relative;   /* positioned absolutely in ".welcome container" */
        height: 651px;
        top: 162px;   /* PSD space between top of ".welcome" section and start of this section */
        color: white;
        background-image: url(images/Untitled-billybonds.jpg);
        background-size: cover;
        background-position: center;
    }

    #intro {
        position: relative;
        top: 237px;   /* PSD measurement */
        font-size: 350%;
        margin-bottom: 11px;   /* PSD space */
    }

    #intro-end-sentence {
        position: relative;
        top: 237px;    /* Why it's the same distance from top as the text above it: "#intro" has a margin-bottom, so it will put space between itself and whatever is under it automatically. Also, if I were to put it at the pixel distance from the PSD, then there would be a large gap between the two text sections. Why? Because the font & font-size I use on this actual web-page differs from the PSD, so the amount of pixel height they take up are different. For this reason, I'm going to approximate the text position and make the font-size bigger than what I use for the mobile version. */
        font-size: 275%;
    }

    .companyLogo-container {
        position: absolute;
        width: 100%;
        top: 0px;
        display: flex;
        justify-content: center;
    }

    .companyLogo {
        margin: 0;
    }




    /*************************
               $About section
    *************************/


    .about {
        position: relative;
        top: 60px;
        height: 492px;      /* actual PSD measurement is 552px, but since section is already removed 60px from section above it, there is 60px of space that counts as part of this section's height (in webpage format).   Solution: I subtracted those 60px from this sections height. */
        margin-bottom: 0;
    }

    #about-section-heading {
        margin-top: 73px;
        margin-bottom: 77px;
        font-size: 275%;
    }

    .about-text-wrapper {
        float: left;
        width: 484px;
        padding-left: 140px;
    }

    .about-first-paragraph {
        margin-bottom: 36px;
        padding-left: 0;
        padding-right: 0;
    }

    #meet-team-heading {
        font-size: xx-large;
    }

    .about-final-paragraph {
        width: 484px;
        clear: left;
        padding-left: 140px;
        padding-right: 0;
        /*margin-top: -66px;             /* After using "display: table" for this about section to move this paragraphy directly under the "Meet the Team" header, there was an weird whitespace between them (I noticed that when I turned "display: table" off in the debugger, this space wouldn't exist b/w any of the elements in this section; but of course, the elements would no longer be in the order I wanted them to be in.).    Solution: I added a negative margin to the top of this element in order get rid of the space between this paragraph & the "Meet the Team".  Note: The debugger shows this element having a -66px top margin & NO bottom margin (as it should) in the box model; but when you hover over it with the "inspect" arrow, it seems to have a bottom margin. */*/
    }

    .team-carousel-outmost-container {
        position: absolute;
        right: 140px;
        width: 492px;
        height: 326px;
    }

    .carousel-outer-container {
        width: 492px;
        height: 326px;
        border: none;
        overflow: hidden;
    }

    .carousel-inner {
        width: 492px;
        height: 326px;
        margin: 0;
        font-size: 0;           /*Gets rid of the space between the img elements, because a space with a size 0 font means: no space. Why the space? Img elements have a default CSS style of "display: inline-block", which puts spaces b/w the elements set on that LINE (like a sentence). */
        transform: translate3d(0, 0, 0);
        transition: transform .5s ease-in-out;
    }

    .team-image-1, .team-image-2, .team-image-4, .team-image-5 {
        padding-right: 24px;
    }

    .team-image-1, .team-image-2, .team-image-3 {
        padding-bottom: 30px;
    }


    .navLinks {
        display: none;
        margin: 0;
    }



    /****************
      $Portfolio section
    *****************/


    .Portfolio {
        position: relative;
        top: 60px;
        height: 510px;      /* Actual PSD height is 550px, however, section has a top padding of 60px (that is part of the background-color style), so I subtracted that amount from the height of this section to match the PSD height exactly (else, this section would be 60px taller than the PSD measurement). */
        padding-top: 60px;
    }

    #portfolio-section-heading {
        margin-bottom: 58px;
        font-size: 275%;
    }

    .portfolio-carousel-outmost-container {
        position: absolute;
        left: 140px;
        width: 1000px;
        height: 300px;
    }

    .portfolio-carousel-outer-container {
        width: 1000px;
        height: 300px;
        border: none;
    }

    .portfolio-carousel-inner {
        width: 1000px;
        height: 300px;
    }

    .portfolio-sliding-image {
        padding-right: 20px;
    }

    .portfolio-image-1 {
        /*background-image: url();*/
    }

    .portfolio-image-4, .portfolio-image-8 {
        padding-right: 0;
    }

    .portfolio-image-1, .portfolio-image-2, .portfolio-image-3, .portfolio-image-4 {
        padding-bottom: 30px;
    }

    .portfolio-navLinks {
        display: none;
    }
    /****************
        $Arrow Buttons
     ****************/
     .fa-stack {
         visibility: visible;
     }

    .left-arrow-button {
        left: 110px;
        margin-top: 39px;
    }

    .left-arrow-img {
        color: #ba8c48;
    }

    .right-arrow-img {
        color: #ba8c48;
    }

    .button-circle-background {
        color: white;
    }

    .right-arrow-button {
        left: 1040px;
        margin-top: 39px;
    }

    .left-arrow-button-2 {
        top: 177px;
        right: 28px;
    }

    .right-arrow-button-2 {
        top: 177px;
        left: 904px;
    }




    /****************
      $Contact section
    *****************/

    .contactUs {
        height: 649px;
        border: 3px solid black;
        position: relative;
        top: 60px;
        margin-top: 0;
    }

    .googleMap {
        float: left;
    }

    #contactUs-section-heading {
        margin-bottom: 22px;
    }

    .contact-form-section {
        position: absolute;
        width: 405px;
        height: 357px;
        right: 0px;
        line-height: 0;     /* Without this declaration, there is an un-wanted space between the bottom-margin of this section and the top-padding of the button under it. */
    }

    .emailBox {
        width: 405px;
        height: 76px;
        padding-bottom: 0;
        margin-bottom: 16px;
    }

    .nameBox {
        width: 405px;
        height: 76px;
        padding-bottom: 0;
        margin-bottom: 21px;
    }

    .messageBox {
        width: 405px;
        height: 168px;
        padding-bottom: 0;
        margin-bottom: 20px;
    }

    .sendButton {
        margin-top: 0;
    }




    /****************
      $Back to top button
    *****************/

    .top-button {
        position: relative;
        top: 60px;
    }




    /****************
      $Footer
    *****************/

    footer {
        position: relative;
        top: 60px;
    }









}   /** media query closing bracket **/
